unit uCadGrupo;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, DBCtrls, Mask, Buttons, ExtCtrls, Grids, DBGrids,Db,
  SUISkinEngine, FMTBcd, SqlExpr, DBClient, Provider, PageView, Collection,
  AdvGlowButton, Wwdbigrd, Wwdbgrid, TFlatPanelUnit, wwdbedit, Wwdotdot,
  Wwdbcomb, ComCtrls, RzEdit, RzDBEdit, RzDBBnEd, AdvPanel;

type
  TfrmCadGrupo = class(TForm)
    dspGrupoProdutoDto: TDataSetProvider;
    cdsGrupoProdutoDto: TClientDataSet;
    dsGrupoProdutoDto: TDataSource;
    dspValidacaoDTO: TDataSetProvider;
    cdsValidacaoDTO: TClientDataSet;
    cdsValidacaoDTOVALIDACAODTO_ID: TFMTBCDField;
    cdsValidacaoDTOCODLOJA: TFloatField;
    cdsValidacaoDTOID: TStringField;
    dsValidacaoDTO: TDataSource;
    cdsGrupoProdutoDtoGRUPOPRODUTODTO_ID: TFMTBCDField;
    cdsGrupoProdutoDtoCODREFER: TStringField;
    cdsGrupoProdutoDtoCODRETAG: TStringField;
    cdsGrupoProdutoDtoCONTREST: TStringField;
    cdsGrupoProdutoDtoDESCMAXI: TFloatField;
    cdsGrupoProdutoDtoDIGPRECO: TStringField;
    cdsGrupoProdutoDtoDIGQUANT: TStringField;
    cdsGrupoProdutoDtoDIGVALOR: TStringField;
    cdsGrupoProdutoDtoGUID: TStringField;
    cdsGrupoProdutoDtoGUIDREFE: TStringField;
    cdsGrupoProdutoDtoID: TStringField;
    cdsGrupoProdutoDtoNOMEGRUP: TStringField;
    cdsGrupoProdutoDtoPLANOPAG: TFloatField;
    dspInsertGrupoProdutoDTO: TDataSetProvider;
    cdsInsertGrupoProdutoDTO: TClientDataSet;
    dsInsertGrupoProdutoDTO: TDataSource;
    qGrupoProdutoDto: TSQLDataSet;
    qGrupoProdutoDtoGRUPOPRODUTODTO_ID: TLargeintField;
    qGrupoProdutoDtoCODREFER: TStringField;
    qGrupoProdutoDtoCODRETAG: TStringField;
    qGrupoProdutoDtoCONTREST: TStringField;
    qGrupoProdutoDtoDESCMAXI: TFloatField;
    qGrupoProdutoDtoDIGPRECO: TStringField;
    qGrupoProdutoDtoDIGQUANT: TStringField;
    qGrupoProdutoDtoDIGVALOR: TStringField;
    qGrupoProdutoDtoGUID: TStringField;
    qGrupoProdutoDtoGUIDREFE: TStringField;
    qGrupoProdutoDtoID: TStringField;
    qGrupoProdutoDtoNOMEGRUP: TStringField;
    qGrupoProdutoDtoPLANOPAG: TFloatField;
    sqlValidacaoDTO: TSQLDataSet;
    sqlValidacaoDTOVALIDACAODTO_ID: TLargeintField;
    sqlValidacaoDTOCODLOJA: TFloatField;
    sqlValidacaoDTOID: TStringField;
    spInsertGrupoProdutoDTO: TSQLStoredProc;
    procedure FormShow(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure DBGrid1TitleClick(Column: TColumn);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure BB_NOVOClick(Sender: TObject);
    procedure BB_EDITARClick(Sender: TObject);
    procedure BB_CANCELARClick(Sender: TObject);
    procedure BB_GRAVARClick(Sender: TObject);
    procedure BB_EXCLUIRClick(Sender: TObject);
    procedure BB_PESQUISARClick(Sender: TObject);
    procedure BB_EXPORTARClick(Sender: TObject);
    procedure BB_SAIRClick(Sender: TObject);
    procedure DBGrid2DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
  private
    { Private declarations }
    Procedure GerenciaBotoes;
  public
    { Public declarations }
  end;

var
  frmCadGrupo: TfrmCadGrupo;
  Tipo : String;

implementation

uses U_LIB, UD_PESQUISA, uDm;

{$R *.dfm}

{ TfrmCadRota }

procedure TfrmCadGrupo.GerenciaBotoes;
begin
  BB_NOVO.Enabled := not (DM.cdsGrupoProduto.State in dsEditModes);
  BB_GRAVAR.Enabled := NOT BB_NOVO.Enabled;
  BB_EXCLUIR.Enabled := BB_NOVO.Enabled and not (DM.cdsGrupoProduto.IsEmpty);
  BB_CANCELAR.Enabled := BB_GRAVAR.Enabled;
  BB_EDITAR.Enabled := BB_EXCLUIR.Enabled;
  BB_SAIR.Enabled := BB_NOVO.Enabled;
  BB_PESQUISAR.Enabled:= BB_NOVO.Enabled;
  BB_EXPORTAR.Enabled:= BB_NOVO.Enabled;
  PCUPOM.Enabled := not BB_NOVO.Enabled;
end;

procedure TfrmCadGrupo.FormShow(Sender: TObject);
begin
  DM.cdsGrupoProduto.Open;
  GerenciaBotoes;
end;

procedure TfrmCadGrupo.FormKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
  begin
    Key := #0;
    Perform(WM_NEXTDLGCTL, 0, 0);
  end;
end;

procedure TfrmCadGrupo.DBGrid1TitleClick(Column: TColumn);
begin
  (*recupera a cor original da coluna*)
  if DM.cdsGrupoProduto.IndexFieldNames <> '' then
    DBGrid2.Columns[DM.cdsGrupoProduto.FieldByName
    (DM.cdsGrupoProduto.IndexFieldNames).Index].Title.Color :=
      DBGrid2.FixedColor;


  (*se campo não for blob ou memo e se for do tipo data*)
  if not (Column.Field.DataType in [ftBlob,ftMemo]) then
    if Column.Field.FieldKind = fkData then
    begin
      DM.cdsGrupoProduto.IndexFieldNames := Column.FieldName; // indexa
//      Column.Font.Style := [fsBold]; // Tipo da Fonte
    end;
end;

procedure TfrmCadGrupo.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  Action := caFree;
  frmCadGrupo := nil;

end;

procedure TfrmCadGrupo.BB_NOVOClick(Sender: TObject);
begin
  Tipo := 'Insert';
  DM.cdsGrupoProduto.Insert;
  DM.cdsGrupoProdutoEXPORTADO.AsString:='N';

  GerenciaBotoes;
  DBEdit2.SetFocus;

end;

procedure TfrmCadGrupo.BB_EDITARClick(Sender: TObject);
begin
  Tipo := 'Edit';
  DM.cdsGrupoProduto.Edit;
  DM.cdsGrupoProdutoEXPORTADO.AsString:='N';
  GerenciaBotoes;
  DBEdit2.SetFocus;
end;

procedure TfrmCadGrupo.BB_CANCELARClick(Sender: TObject);
begin
  DM.cdsGrupoProduto.Cancel;
  GerenciaBotoes;

end;

procedure TfrmCadGrupo.BB_GRAVARClick(Sender: TObject);
begin
  if Tipo = 'Insert' then
  begin
    DM.cdsDinamica.Close;
    DM.cdsDinamica.IndexFieldNames:='';
    DM.cdsDinamica.CommandText := ' SELECT MAX(ID_GRUPO_PRODUTO) FROM TB_GRUPO_PRODUTO ';
    DM.cdsDinamica.Open;

    DM.cdsGrupoProdutoID_GRUPO_PRODUTO.AsInteger := DM.cdsDinamica.Fields[0].AsInteger + 1;
    if DM.cdsGrupoProduto.ApplyUpdates(0) <> 0 then
    begin
      ShowMessage('O Sistema não conseguiu gravar este Registro. Tente novamente ou contate o Suporte.');
      BB_GRAVAR.SetFocus;
    end
    else
    begin
      DM.cdsGrupoProduto.ApplyUpdates(0);
      DM.cdsGrupoProduto.Refresh;
      GerenCiaBotoes;
    end;
  end;

  if Tipo = 'Edit' then
  begin
    if DM.cdsGrupoProduto.ApplyUpdates(0) <> 0 then
    begin
      ShowMessage('O Sistema não conseguiu gravar este Registro. Tente novamente ou contate o Suporte.');
      BB_GRAVAR.SetFocus;
    end
    else
    begin
      DM.cdsGrupoProduto.ApplyUpdates(0);
      DM.cdsGrupoProduto.Refresh;
      GerenCiaBotoes;
    end;
  end;
end;

procedure TfrmCadGrupo.BB_EXCLUIRClick(Sender: TObject);
begin
  if Application.MessageBox('Deseja Excluir Este Grupo ?','Confirmação',MB_ICONQUESTION+MB_YESNO ) = idyes then
  begin
    DM.cdsGrupoProduto.Delete;
    DM.cdsGrupoProduto.ApplyUpdates(0);
    GerenciaBotoes;
  end
  else
  begin
    ShowMessage('Grupo Não Excluído');
  end;
    GerenciaBotoes;

end;

procedure TfrmCadGrupo.BB_PESQUISARClick(Sender: TObject);
begin
  Pesquisa(DM.cdsGrupoProduto,['DESCRICAO'],['Grupo Produto'],
    [20],'','','','','Grupo Produto','Grupo Produto');

end;

procedure TfrmCadGrupo.BB_EXPORTARClick(Sender: TObject);
begin
  if Application.MessageBox('Deseja Exportar Para O Dincash?','Atenção!!!',MB_OK+MB_YESNO ) = idyes then
  begin
    cdsGrupoProdutoDto.Close;
    cdsGrupoProdutoDto.Open;
    cdsValidacaoDTO.Close;
    cdsValidacaoDTO.Open;
    cdsInsertGrupoProdutoDTO.Execute;
    cdsGrupoProdutoDto.Close;
    cdsValidacaoDTO.Close;

    ShowMessage('Produtos Exportados Com Sucesso');

    DM.cdsGrupoProduto.Close;
    DM.cdsGrupoProduto.Open;
  end
  else
  begin
    ShowMessage('Exportação Cancelada');
  end;

end;

procedure TfrmCadGrupo.BB_SAIRClick(Sender: TObject);
begin
  DM.cdsDinamica.Close;
  DM.cdsDinamica.IndexFieldNames:='';
  DM.cdsDinamica.CommandText := ' SELECT EXPORTADO FROM TB_GRUPO_PRODUTO WHERE EXPORTADO = ''N''';
  DM.cdsDinamica.Open;

  if DM.cdsDinamica.IsEmpty then
  begin
    DM.cdsGrupoProduto.Close;
    Close;
  end
  else
  begin
    if Application.MessageBox('Existe(m) Grupo(s) de Produto(s) sem importar, Deseja Importar Grupo(s) de Produto(s) Agora?','Atenção',MB_OK+MB_YESNO)= idyes then
    begin
      BB_EXPORTARClick(Self);
    end
    else
    begin
      DM.cdsGrupoProduto.Close;
      Close;
    end;
  end;
end;

procedure TfrmCadGrupo.DBGrid2DrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn;
  State: TGridDrawState);
begin
  TDbGrid(Sender).Canvas.font.Color:= clBlack; //aqui é definida a cor da fonte
  if gdSelected in State then
  with (Sender as TDBGrid).Canvas do
  begin
    Brush.Color:=$00F0DAC7; //aqui é definida a cor do fundo
    Font.Style := [fsBold];
    FillRect(Rect);
  end;

  TDbGrid(Sender).DefaultDrawDataCell(Rect, TDbGrid(Sender).columns[datacol].field, State);

end;

end.
